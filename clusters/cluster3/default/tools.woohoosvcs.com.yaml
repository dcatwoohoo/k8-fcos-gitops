apiVersion: apps/v1
kind: Deployment
metadata:
  name: tools
  namespace: default
  labels:
    app.kubernetes.io/name: tools
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: tools
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tools
        app.kubernetes.io/version: 1.0.0
    spec:
      containers:
        - name: tools
          image: localhost/tools
          imagePullPolicy: "IfNotPresent"
          resources:
            requests:
              cpu: "25m"
              memory: "16Mi"
            limits:
              cpu: "500m"
              memory: "128Mi"
          startupProbe:
            httpGet:
              port: httpd
            initialDelaySeconds: 5
            failureThreshold: 12
            periodSeconds: 5
          livenessProbe:
            httpGet:
              port: httpd
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 12
          ports:
            - name: httpd
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: tools-service
  namespace: default
spec:
  ports:
  - name: httpd-port
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: tools
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tools-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "false"
    #cert-manager.io/cluster-issuer: "nameOfClusterIssuer"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - tools.localdev.me
    secretName: tools-localdev-me-tls
  rules:
  - host: tools.localdev.me
    http:
      paths:
      - backend:
          service:
            name: tools-service
            port:
              number: 80
        path: /
        pathType: Prefix
